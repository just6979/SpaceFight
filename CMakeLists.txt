cmake_minimum_required(VERSION 3.3)
project("SpaceFight")

set(EXECUTABLE_NAME ${PROJECT_NAME})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin/${CMAKE_BUILD_TYPE}/)

set(CMAKE_VERBOSE_MAKEFILE ON)

set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} -std=c++11 -Wall")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_RELEASE}")

set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} -std=c++11 -g")

if (CMAKE_BUILD_TYPE STREQUAL "Debug")
    ADD_DEFINITIONS(-DDO_DEBUG)
endif (CMAKE_BUILD_TYPE STREQUAL "Debug")

find_program(CCACHE_FOUND ccache)
if (CCACHE_FOUND)
    set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE ccache)
    set_property(GLOBAL PROPERTY RULE_LAUNCH_LINK ccache)
endif (CCACHE_FOUND)

INCLUDE_DIRECTORIES(include)

# find the headers in contrib
INCLUDE_DIRECTORIES(contrib/inih)
INCLUDE_DIRECTORIES(contrib/logog/include)

# get all the source files in contrib
file(GLOB_RECURSE CONTRIB_SOURCE_C contrib *.c)
file(GLOB_RECURSE CONTRIB_SOURCE_CPP contrib *.cpp)

set(SOURCE_FILES
        src/SpaceFight.cpp
        src/Game.cpp include/Game.h
        src/GameSprite.cpp include/GameSprite.h
        src/GamePlayer.cpp include/GamePlayer.h
        )

if (WIN32)
    set(SFML_STATIC_LIBRARIES TRUE)
endif ()
set(CMAKE_MODULE_PATH "${SFML_ROOT}/cmake/Modules" ${CMAKE_MODULE_PATH})
find_package(SFML 2 REQUIRED graphics window system)
if (SFML_FOUND)
    include_directories(${SFML_INCLUDE_DIR})
endif ()

add_executable(${EXECUTABLE_NAME} ${SOURCE_FILES} ${CONTRIB_SOURCE_C} ${CONTRIB_SOURCE_CPP})

target_link_libraries(${EXECUTABLE_NAME} ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})
